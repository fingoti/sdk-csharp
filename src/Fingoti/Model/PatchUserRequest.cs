/*
 * Fingoti API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Fingoti.Client.OpenAPIDateConverter;

namespace Fingoti.Model
{
    /// <summary>
    /// PatchUserRequest
    /// </summary>
    [DataContract(Name = "PatchUserRequest")]
    public partial class PatchUserRequest : IEquatable<PatchUserRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PatchUserRequest" /> class.
        /// </summary>
        /// <param name="forename">forename.</param>
        /// <param name="surname">surname.</param>
        /// <param name="mobile">mobile.</param>
        /// <param name="telephone">telephone.</param>
        /// <param name="marketing">marketing.</param>
        /// <param name="defaultOrganisation">defaultOrganisation.</param>
        public PatchUserRequest(string forename = default(string), string surname = default(string), string mobile = default(string), string telephone = default(string), bool? marketing = default(bool?), Guid? defaultOrganisation = default(Guid?))
        {
            this.Forename = forename;
            this.Surname = surname;
            this.Mobile = mobile;
            this.Telephone = telephone;
            this.Marketing = marketing;
            this.DefaultOrganisation = defaultOrganisation;
        }

        /// <summary>
        /// Gets or Sets Forename
        /// </summary>
        [DataMember(Name = "forename", EmitDefaultValue = true)]
        public string Forename { get; set; }

        /// <summary>
        /// Gets or Sets Surname
        /// </summary>
        [DataMember(Name = "surname", EmitDefaultValue = true)]
        public string Surname { get; set; }

        /// <summary>
        /// Gets or Sets Mobile
        /// </summary>
        [DataMember(Name = "mobile", EmitDefaultValue = true)]
        public string Mobile { get; set; }

        /// <summary>
        /// Gets or Sets Telephone
        /// </summary>
        [DataMember(Name = "telephone", EmitDefaultValue = true)]
        public string Telephone { get; set; }

        /// <summary>
        /// Gets or Sets Marketing
        /// </summary>
        [DataMember(Name = "marketing", EmitDefaultValue = true)]
        public bool? Marketing { get; set; }

        /// <summary>
        /// Gets or Sets DefaultOrganisation
        /// </summary>
        [DataMember(Name = "defaultOrganisation", EmitDefaultValue = true)]
        public Guid? DefaultOrganisation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PatchUserRequest {\n");
            sb.Append("  Forename: ").Append(Forename).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Mobile: ").Append(Mobile).Append("\n");
            sb.Append("  Telephone: ").Append(Telephone).Append("\n");
            sb.Append("  Marketing: ").Append(Marketing).Append("\n");
            sb.Append("  DefaultOrganisation: ").Append(DefaultOrganisation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PatchUserRequest);
        }

        /// <summary>
        /// Returns true if PatchUserRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of PatchUserRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PatchUserRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Forename == input.Forename ||
                    (this.Forename != null &&
                    this.Forename.Equals(input.Forename))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Mobile == input.Mobile ||
                    (this.Mobile != null &&
                    this.Mobile.Equals(input.Mobile))
                ) && 
                (
                    this.Telephone == input.Telephone ||
                    (this.Telephone != null &&
                    this.Telephone.Equals(input.Telephone))
                ) && 
                (
                    this.Marketing == input.Marketing ||
                    (this.Marketing != null &&
                    this.Marketing.Equals(input.Marketing))
                ) && 
                (
                    this.DefaultOrganisation == input.DefaultOrganisation ||
                    (this.DefaultOrganisation != null &&
                    this.DefaultOrganisation.Equals(input.DefaultOrganisation))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Forename != null)
                {
                    hashCode = (hashCode * 59) + this.Forename.GetHashCode();
                }
                if (this.Surname != null)
                {
                    hashCode = (hashCode * 59) + this.Surname.GetHashCode();
                }
                if (this.Mobile != null)
                {
                    hashCode = (hashCode * 59) + this.Mobile.GetHashCode();
                }
                if (this.Telephone != null)
                {
                    hashCode = (hashCode * 59) + this.Telephone.GetHashCode();
                }
                if (this.Marketing != null)
                {
                    hashCode = (hashCode * 59) + this.Marketing.GetHashCode();
                }
                if (this.DefaultOrganisation != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultOrganisation.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
