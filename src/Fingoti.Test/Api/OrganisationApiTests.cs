/*
 * Fingoti API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Fingoti.Client;
using Fingoti.Api;
// uncomment below to import models
//using Fingoti.Model;

namespace Fingoti.Test.Api
{
    /// <summary>
    ///  Class for testing OrganisationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrganisationApiTests : IDisposable
    {
        private OrganisationApi instance;

        public OrganisationApiTests()
        {
            instance = new OrganisationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OrganisationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OrganisationApi
            //Assert.IsType<OrganisationApi>(instance);
        }

        /// <summary>
        /// Test DeleteOrganisationAddressesId
        /// </summary>
        [Fact]
        public void DeleteOrganisationAddressesIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.DeleteOrganisationAddressesId(id);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test DeleteOrganisationPresetsId
        /// </summary>
        [Fact]
        public void DeleteOrganisationPresetsIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.DeleteOrganisationPresetsId(id);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test DeleteOrganisationRolesId
        /// </summary>
        [Fact]
        public void DeleteOrganisationRolesIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.DeleteOrganisationRolesId(id);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test DeleteOrganisationTokensId
        /// </summary>
        [Fact]
        public void DeleteOrganisationTokensIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.DeleteOrganisationTokensId(id);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test DeleteOrganisationUsersId
        /// </summary>
        [Fact]
        public void DeleteOrganisationUsersIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.DeleteOrganisationUsersId(id);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test GetOrganisation
        /// </summary>
        [Fact]
        public void GetOrganisationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetOrganisation();
            //Assert.IsType<OrganisationResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationAddresses
        /// </summary>
        [Fact]
        public void GetOrganisationAddressesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? address = null;
            //string? postcode = null;
            //var response = instance.GetOrganisationAddresses(pageNumber, itemsPerPage, address, postcode);
            //Assert.IsType<OrganisationAddressResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationAddressesId
        /// </summary>
        [Fact]
        public void GetOrganisationAddressesIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetOrganisationAddressesId(id);
            //Assert.IsType<OrganisationAddressResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationPartner
        /// </summary>
        [Fact]
        public void GetOrganisationPartnerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetOrganisationPartner();
            //Assert.IsType<OrganisationPartnerResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationPresets
        /// </summary>
        [Fact]
        public void GetOrganisationPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? presetNumber = null;
            //string? presetName = null;
            //var response = instance.GetOrganisationPresets(pageNumber, itemsPerPage, presetNumber, presetName);
            //Assert.IsType<OrganisationPresetResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationPresetsId
        /// </summary>
        [Fact]
        public void GetOrganisationPresetsIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetOrganisationPresetsId(id);
            //Assert.IsType<OrganisationPresetResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationRoles
        /// </summary>
        [Fact]
        public void GetOrganisationRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? roleName = null;
            //var response = instance.GetOrganisationRoles(pageNumber, itemsPerPage, roleName);
            //Assert.IsType<OrganisationRoleResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationRolesId
        /// </summary>
        [Fact]
        public void GetOrganisationRolesIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetOrganisationRolesId(id);
            //Assert.IsType<OrganisationRoleResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationTenants
        /// </summary>
        [Fact]
        public void GetOrganisationTenantsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? organisationNumber = null;
            //string? organisationName = null;
            //var response = instance.GetOrganisationTenants(pageNumber, itemsPerPage, organisationNumber, organisationName);
            //Assert.IsType<OrganisationTenantsResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationTokens
        /// </summary>
        [Fact]
        public void GetOrganisationTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? tokenName = null;
            //var response = instance.GetOrganisationTokens(pageNumber, itemsPerPage, tokenName);
            //Assert.IsType<UserTokenResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationTokensId
        /// </summary>
        [Fact]
        public void GetOrganisationTokensIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetOrganisationTokensId(id);
            //Assert.IsType<UserTokenResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationUsers
        /// </summary>
        [Fact]
        public void GetOrganisationUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? name = null;
            //string? email = null;
            //var response = instance.GetOrganisationUsers(pageNumber, itemsPerPage, name, email);
            //Assert.IsType<OrganisationUserResponse>(response);
        }

        /// <summary>
        /// Test GetOrganisationUsersId
        /// </summary>
        [Fact]
        public void GetOrganisationUsersIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetOrganisationUsersId(id);
            //Assert.IsType<OrganisationUserResponse>(response);
        }

        /// <summary>
        /// Test PatchOrganisation
        /// </summary>
        [Fact]
        public void PatchOrganisationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PatchOrganisationRequest? patchOrganisationRequest = null;
            //var response = instance.PatchOrganisation(patchOrganisationRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PatchOrganisationAddressesId
        /// </summary>
        [Fact]
        public void PatchOrganisationAddressesIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchAddressRequest? patchAddressRequest = null;
            //var response = instance.PatchOrganisationAddressesId(id, patchAddressRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PatchOrganisationPresetsId
        /// </summary>
        [Fact]
        public void PatchOrganisationPresetsIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchPresetRequest? patchPresetRequest = null;
            //var response = instance.PatchOrganisationPresetsId(id, patchPresetRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PatchOrganisationRolesId
        /// </summary>
        [Fact]
        public void PatchOrganisationRolesIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchRoleRequest? patchRoleRequest = null;
            //var response = instance.PatchOrganisationRolesId(id, patchRoleRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PatchOrganisationTokensId
        /// </summary>
        [Fact]
        public void PatchOrganisationTokensIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchOrganisationTokenRequest? patchOrganisationTokenRequest = null;
            //var response = instance.PatchOrganisationTokensId(id, patchOrganisationTokenRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PatchOrganisationUsersId
        /// </summary>
        [Fact]
        public void PatchOrganisationUsersIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //UpdateUserRole? updateUserRole = null;
            //var response = instance.PatchOrganisationUsersId(id, updateUserRole);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PostOrganisation
        /// </summary>
        [Fact]
        public void PostOrganisationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegiserOrganisationDto? regiserOrganisationDto = null;
            //var response = instance.PostOrganisation(regiserOrganisationDto);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PostOrganisationAddresses
        /// </summary>
        [Fact]
        public void PostOrganisationAddressesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddAddressRequest? addAddressRequest = null;
            //var response = instance.PostOrganisationAddresses(addAddressRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PostOrganisationPresets
        /// </summary>
        [Fact]
        public void PostOrganisationPresetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddPresetRequest? addPresetRequest = null;
            //var response = instance.PostOrganisationPresets(addPresetRequest);
            //Assert.IsType<AddPresetResult>(response);
        }

        /// <summary>
        /// Test PostOrganisationRoles
        /// </summary>
        [Fact]
        public void PostOrganisationRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddRoleRequest? addRoleRequest = null;
            //var response = instance.PostOrganisationRoles(addRoleRequest);
            //Assert.IsType<DefaultWithId>(response);
        }

        /// <summary>
        /// Test PostOrganisationTenants
        /// </summary>
        [Fact]
        public void PostOrganisationTenantsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegiserTenantDto? regiserTenantDto = null;
            //var response = instance.PostOrganisationTenants(regiserTenantDto);
            //Assert.IsType<RegisterOrganisationResult>(response);
        }

        /// <summary>
        /// Test PostOrganisationTokens
        /// </summary>
        [Fact]
        public void PostOrganisationTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewOrganisationTokenDto? newOrganisationTokenDto = null;
            //var response = instance.PostOrganisationTokens(newOrganisationTokenDto);
            //Assert.IsType<TokenSuccessResponse>(response);
        }

        /// <summary>
        /// Test PostOrganisationUsers
        /// </summary>
        [Fact]
        public void PostOrganisationUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InviteUserDto? inviteUserDto = null;
            //var response = instance.PostOrganisationUsers(inviteUserDto);
            //Assert.IsType<Default>(response);
        }
    }
}
