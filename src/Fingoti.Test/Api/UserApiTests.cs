/*
 * Fingoti API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Fingoti.Client;
using Fingoti.Api;
// uncomment below to import models
//using Fingoti.Model;

namespace Fingoti.Test.Api
{
    /// <summary>
    ///  Class for testing UserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserApiTests : IDisposable
    {
        private UserApi instance;

        public UserApiTests()
        {
            instance = new UserApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserApi
            //Assert.IsType<UserApi>(instance);
        }

        /// <summary>
        /// Test DeleteUserTokensId
        /// </summary>
        [Fact]
        public void DeleteUserTokensIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.DeleteUserTokensId(id);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test GetUser
        /// </summary>
        [Fact]
        public void GetUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUser();
            //Assert.IsType<GetProfileResponse>(response);
        }

        /// <summary>
        /// Test GetUserOrganisations
        /// </summary>
        [Fact]
        public void GetUserOrganisationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? organisationName = null;
            //var response = instance.GetUserOrganisations(pageNumber, itemsPerPage, organisationName);
            //Assert.IsType<PortalUserOrganisationsDto>(response);
        }

        /// <summary>
        /// Test GetUserSessions
        /// </summary>
        [Fact]
        public void GetUserSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //var response = instance.GetUserSessions(pageNumber, itemsPerPage);
            //Assert.IsType<UserSessionsResponse>(response);
        }

        /// <summary>
        /// Test GetUserTokens
        /// </summary>
        [Fact]
        public void GetUserTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? pageNumber = null;
            //int? itemsPerPage = null;
            //string? tokenName = null;
            //var response = instance.GetUserTokens(pageNumber, itemsPerPage, tokenName);
            //Assert.IsType<UserTokenResponse>(response);
        }

        /// <summary>
        /// Test GetUserTokensId
        /// </summary>
        [Fact]
        public void GetUserTokensIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetUserTokensId(id);
            //Assert.IsType<UserTokenResponse>(response);
        }

        /// <summary>
        /// Test PatchUser
        /// </summary>
        [Fact]
        public void PatchUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PatchUserRequest? patchUserRequest = null;
            //var response = instance.PatchUser(patchUserRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PatchUserTokensId
        /// </summary>
        [Fact]
        public void PatchUserTokensIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //PatchUserTokenRequest? patchUserTokenRequest = null;
            //var response = instance.PatchUserTokensId(id, patchUserTokenRequest);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PostUser
        /// </summary>
        [Fact]
        public void PostUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterUserDto? registerUserDto = null;
            //var response = instance.PostUser(registerUserDto);
            //Assert.IsType<DefaultWithToken>(response);
        }

        /// <summary>
        /// Test PostUserTokens
        /// </summary>
        [Fact]
        public void PostUserTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewUserTokenDto? newUserTokenDto = null;
            //var response = instance.PostUserTokens(newUserTokenDto);
            //Assert.IsType<TokenSuccessResponse>(response);
        }
    }
}
