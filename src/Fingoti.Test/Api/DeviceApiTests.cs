/*
 * Fingoti API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Fingoti.Client;
using Fingoti.Api;
// uncomment below to import models
//using Fingoti.Model;

namespace Fingoti.Test.Api
{
    /// <summary>
    ///  Class for testing DeviceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DeviceApiTests : IDisposable
    {
        private DeviceApi instance;

        public DeviceApiTests()
        {
            instance = new DeviceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DeviceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DeviceApi
            //Assert.IsType<DeviceApi>(instance);
        }

        /// <summary>
        /// Test DeleteDeviceId
        /// </summary>
        [Fact]
        public void DeleteDeviceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.DeleteDeviceId(id);
            //Assert.IsType<UpdateResponse>(response);
        }

        /// <summary>
        /// Test GetDevice
        /// </summary>
        [Fact]
        public void GetDeviceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? lastUpdated = null;
            //var response = instance.GetDevice(lastUpdated);
            //Assert.IsType<ClaimedDevicesDto>(response);
        }

        /// <summary>
        /// Test GetDeviceId
        /// </summary>
        [Fact]
        public void GetDeviceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetDeviceId(id);
            //Assert.IsType<ClaimedDeviceResponse>(response);
        }

        /// <summary>
        /// Test GetDeviceIdNodes
        /// </summary>
        [Fact]
        public void GetDeviceIdNodesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetDeviceIdNodes(id);
            //Assert.IsType<DeviceNodesResponse>(response);
        }

        /// <summary>
        /// Test PatchDeviceId
        /// </summary>
        [Fact]
        public void PatchDeviceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //PatchGateway? patchGateway = null;
            //var response = instance.PatchDeviceId(id, patchGateway);
            //Assert.IsType<Default>(response);
        }

        /// <summary>
        /// Test PostDevice
        /// </summary>
        [Fact]
        public void PostDeviceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClaimRequest? claimRequest = null;
            //var response = instance.PostDevice(claimRequest);
            //Assert.IsType<ClaimResult>(response);
        }

        /// <summary>
        /// Test PostDeviceSendrequest
        /// </summary>
        [Fact]
        public void PostDeviceSendrequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeviceRequest? deviceRequest = null;
            //var response = instance.PostDeviceSendrequest(deviceRequest);
            //Assert.IsType<MqttDeviceResponse>(response);
        }

        /// <summary>
        /// Test PostDeviceUpdate
        /// </summary>
        [Fact]
        public void PostDeviceUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateRequest? updateRequest = null;
            //var response = instance.PostDeviceUpdate(updateRequest);
            //Assert.IsType<MqttDeviceResponse>(response);
        }
    }
}
